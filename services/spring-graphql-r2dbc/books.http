### Create book
GRAPHQL http://localhost:8080/graphql
#Authorization: Bearer {{token}}
Authorization: Basic admin nimda
#Authorization: Basic user resu
Content-Type: application/json

mutation CreateBook($newBook: CreateBookInput!) {
  createBook(input: $newBook) {
    id
    title
    category
    author {
      id
      name
    }
    createdAt
    createdBy
    updatedAt
    updatedBy
  }
}

{
    "newBook": {
        "title": "my book",
        "pages": 50,
        "category": "HORROR",
        "author": "sumo"
    }
}

> {% client.global.set("book_id", response.body.data.createBook.id); %}


### Get book
GRAPHQL http://localhost:8080/graphql
#Authorization: Bearer {{token}}
Authorization: Basic admin nimda
Content-Type: application/json

query BookById($id: UUID!) {
  bookById(id: $id) {
    id
    title
    category
    createdAt
    createdBy
    updatedAt
    updatedBy
    author {
      id
      name
      age
    }
  }
}

{
    "id": "{{book_id}}"
}

### Stream books
// WebSockets are handy for GraphQL subscriptions
GRAPHQL ws://localhost:8080/graphql
#Authorization: Bearer {{token}}
Authorization: Basic admin nimda
Content-Type: application/json

subscription BookStream($category: Category) {
  bookStream(category: $category) {
    id
    title
    category
    author {
      name
    }
    createdAt
    createdBy
    updatedAt
    updatedBy
  }
}

{
    "category": "COMEDY"
}
