# ========================== server ==========================
server:
  shutdown: graceful # also set `timeout-per-shutdown-phase`

# ======================== management ========================
management.endpoints.web.exposure.include: prometheus,health,info,metrics,bindings,kafkastreamstopology

# ========================== spring ==========================
spring:

  lifecycle:
    timeout-per-shutdown-phase: "10s"

# ========================== kafka ===========================
  kafka:
    properties:
      # Broker
      bootstrap.servers: localhost:9092
      # Schema Registry
      schema.registry.url: http://localhost:8081

# ================= spring-cloud-functions ===================
spring.cloud.function:
  definition: generate;city;state;print

# ================= spring-cloud-stream ======================
spring.cloud.stream:
  bindings:
    generate-out-0:
      destination: all-in-topic
      producer.useNativeEncoding: true
    city-in-0.destination: all-in-topic
    city-out-0.destination: city-out-topic
    state-in-0.destination: all-in-topic
    state-out-0.destination: state-out-topic
    print-in-0.destination: city-out-topic,state-out-topic

# =========== spring-cloud-stream kafka-binder================
# default producer config for all kafka binder bindings.
  kafka.binder:
    producer-properties:
      key.serializer: org.apache.kafka.common.serialization.StringSerializer
      # value.serializer: com.github.thake.kafka.avro4k.serializer.KafkaAvro4kSerializer
      record.packages: micro.apps.service
      value.serializer: micro.apps.kstream.serializer.CryptoKafkaAvro4kSerializer
      crypto.keyFile: /Users/schintha/Developer/Work/java/micro-apps/libs/crypto/src/test/resources/aead_keyset.json

# ============ spring-cloud-stream kstreams-binder============
  kafka.streams.binder:
    deserialization-exception-handler: logAndContinue
    configuration:
      record.packages: micro.apps.service
      default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      # default.value.serde: com.github.thake.kafka.avro4k.serializer.Avro4kSerde
      default.value.serde: micro.apps.kstream.serializer.CryptoAvro4kSerde
      crypto.keyFile: /Users/schintha/Developer/Work/java/micro-apps/libs/crypto/src/test/resources/aead_keyset.json
